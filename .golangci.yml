linters-settings:
  dupl:
    threshold: 150
  funlen:
    lines: 70
    statements: 40
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/sensority-labs)
  gocyclo:
    min-complexity: 20
  lll:
    line-length: 155
  nakedret:
    max-func-lines: 6
  revive:
    rules:
      - name: argument-limit
        severity: warning
        disabled: false
        arguments: [5]

linters:
  enable-all: true
  disable:
    - depguard
    - cyclop
    - dupl
    - exhaustruct
    - forbidigo
    - gocognit
    - godot
    - godox
    - err113
    - gofumpt
    - gomoddirectives
    - gomnd
    - ireturn
    - maintidx
    - nlreturn
    - nonamedreturns
    - paralleltest
    - tagliatelle
    - testpackage
    - varnamelen
    - wrapcheck
    #    - whitespace
    - wsl

issues:
  exclude-rules:
    - path: _test\.go
      linters:
        - dupl
        - errcheck
        - funlen
        - gochecknoglobals
        - gocritic
        - gocyclo
        - gosec
        - prealloc
    - text: "Using the variable on range scope `tt` in function literal"
      linters:
        - scopelint

  exclude-use-default: false
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked

    # govet: shadowing is.I instance in sub test.
    - declaration of "asrt" shadows declaration

    # gocritic: log.Fatal does not exit in our case
    - log.Fatal will exit

    # nolintlint complains about leading space in nolint comments
    - should be written without leading space as \`\/\/nolint
